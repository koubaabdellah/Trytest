HighChartFactory.prototype.getCurrentSelection=function(){return this.currentSelection};HighChartFactory.prototype.initializeAsSelectionMap=function(n,t,i){this.selectionCallback=t;this.initializeTarget();this.storeResults(i,n);this.checkAndPrepareForCharting(n);var r=this;Highcharts.wrap(Highcharts.Point.prototype,"select",function(n){n.apply(this,Array.prototype.slice.call(arguments,1));var i=r.chart.getSelectedPoints(),t=[];$.each(i,function(n,i){t.push(i.id)});r.selectionCallback(t)})};HighChartFactory.prototype.drawHighMapDrillDown=function(){var t,n,i,r;Highcharts.setOptions({lang:{drillUpText:"<< Terug"}});t=Highcharts.geojson(JSON.parse(this.meta.Map));this.presentGeoLocations=[];n={};i=this;$.each(t,function(){this.properties.mbCode=this.properties["hc-key"].replace(/-/g,".").toUpperCase();i.presentGeoLocations.push(this.properties.mbCode);this.drilldown=this.properties.mbCode;n[this.properties.mbCode]=this;this.value=0});r=this.getMapData()[0];$.each(r,function(){n[this.code].value=this.value;n[this.code].min=this.min;n[this.code].max=this.max});$("#"+this.target).highcharts("Map",{chart:{events:{click:function(){},drilldown:function(n){n.seriesOptions||i.drilldown(this,n.point);this.setTitle(null,{text:n.point.name})},drillup:function(){this.setTitle(null,{text:""})}}},title:{text:this.title()},credits:{text:(this.languageID?"Source: ":"Bron: ")+this.meta.DataSupplier.Name,href:this.meta.DataSupplier.Url,style:{fontSize:this.theme.creditsFontSize}},legend:{layout:"vertical",align:"right",verticalAlign:"middle"},mapNavigation:{enabled:!0,buttonOptions:{verticalAlign:"bottom"}},colorAxis:{min:0,minColor:"#E6E7E8",maxColor:"#34b233"},series:[{animation:!0,data:t,name:this.title(),states:{hover:{color:"#BADA55"}},dataLabels:{enabled:!0,format:"{point.properties.name}"}}],tooltip:this.getMapToolTip(),drilldown:{activeDataLabelStyle:{color:"white",textDecoration:"none"},drillUpButton:{relativeTo:"plotBox",position:{x:0,y:60}}}})};HighChartFactory.prototype.drawMap=function(){if(this.meta.Map==null){this.getMap(this.geoDimension.ClassificationID,this.injectedSelectionElements[0],this.drawMapUsing.bind(this));return}this.drawMapUsing(this.meta.Map)};HighChartFactory.prototype.drawMapUsing=function(n){var n,r,t,i,u;n!=null&&(this.setMapUnit(),n=Highcharts.geojson(JSON.parse(n)),this.presentGeoLocations=[],r={},t=this,$.each(n,function(){this.properties.mbCode=this.properties["hc-key"].replace(/-/g,".").toUpperCase();t.presentGeoLocations.push(this.properties.mbCode);this.drilldown=this.properties.mbCode;r[this.properties.mbCode]=this;this.id=this.properties.mbCode}),i=this.getMapData(),u={chart:{renderTo:this.target,style:{fontFamily:"Verdana"}},title:{text:this.title(),style:{fontSize:this.theme.titleFontSize,fontWeight:this.theme.titleFontWeight}},mapNavigation:{enabled:!0,buttonOptions:{verticalAlign:"bottom",style:{fontSize:"7px",fontWeight:"bold",textAlign:"center"},height:12,width:12},buttons:{zoomIn:{x:20,y:-60},zoomOut:{x:20,y:-35}}},colorAxis:{minColor:"#E6E7E8",maxColor:"#34b233",labels:{type:"logarithmic"}},exporting:{enabled:!1},credits:{enabled:!1},legend:this.chartOptions.legend,tooltip:{formatter:function(){return t.mapTooltipFormatter(this.point)}},series:this.getMapSeries(i,n)},i.length>0&&(this.chart=new Highcharts.Map(u)))};HighChartFactory.prototype.getMapSeries=function(n,t){series=[];var i,u,r=this,f=this.LEIcolors(this.defaultPaletteString,n.length,!1);return $.each(n,function(n,e){if(i=null,r.chartOptions.dimensions[r.seriesDimension.columnIndex].series.length>0)try{i=_.findWhere(r.chartOptions.dimensions[r.seriesDimension.columnIndex].series,{order:n})}catch(o){i=r.chartOptions.dimensions[r.seriesDimension.columnIndex].series[n]}u={animation:!1,data:e,mapData:t,joinBy:["id","code"],name:r.description,allowPointSelect:!0,cursor:"pointer",color:f[n],states:{select:{color:"#a4edba",borderColor:"black"}}};i!=null&&(u.name=i.name,i.type!=null&&(u.type=i.type));series.push(u)}),series};HighChartFactory.prototype.drawSelectionMap=function(){this.drawMap();this.chart.get(this.chartOptions.selected).select()};HighChartFactory.prototype.getMapData=function(){var i=this.chartDimensions.indexOf(this.seriesDimension),v=this.chartDimensions.indexOf(this.geoDimension),r=this.chartDimensions.indexOf(this.valueDimension),y=[],o={},s,p,w,t,e,h,u,c,b,k,f,l,n,a;$.each(this.meta.GeoMapping,function(n,t){o[t[0]]=t[1]});try{s=_.findWhere(this.chartOptions.dimensions[this.seriesDimension.columnIndex].series,{avg:!0}).name;p=_.findWhere(this.chartOptions.dimensions[this.seriesDimension.columnIndex].series,{low:!0}).name;w=_.findWhere(this.chartOptions.dimensions[this.seriesDimension.columnIndex].series,{high:!0}).name}catch(d){}for(u=[],u.push({}),n=1;n<this.chartOptions.dimensions[this.seriesDimension.columnIndex].series.length;n++)u.push({});for(b=this.preparedData.length,k=this,n=0;n<b;n++)if(h=o[this.preparedData[n][v]],h!=null&&_.indexOf(this.presentGeoLocations,h)>=0){e="";$.each(this.preparedData[n],function(n,t){n!=i&&n!=r&&(e+=t)});try{l=_.findWhere(this.chartOptions.dimensions[this.seriesDimension.columnIndex].series,{name:this.preparedData[n][i]});f=l.order;f==null&&(f=this.chartOptions.dimensions[this.seriesDimension.columnIndex].series.indexOf(l))}catch(d){f=0}if(c=u[f],t=c[e],t==null&&(t={},t.code=o[this.preparedData[n][v]],c[e]=t),_.isUndefined(s)){t.value=parseFloat(this.preparedData[n][r]);continue}this.preparedData[n][i]==s&&(t.value=parseFloat(this.preparedData[n][r]));this.preparedData[n][i]==p&&(t.min=parseFloat(this.preparedData[n][r]));this.preparedData[n][i]==w&&(t.max=parseFloat(this.preparedData[n][r]))}return $.each(u,function(n,t){a=[];$.each(t,function(n,t){a.push(t)});y.push(a)}),y};HighChartFactory.prototype.drilldown=function(n,t){this.isDrillingDown||(this.isDrillingDown=!0,this.chart=n,this.point=t,this.getMap(this.meta.GeoClassificationID,t.drilldown,this.drilldownCallback.bind(this)))};HighChartFactory.prototype.drilldownCallback=function(n){var t,r,i,u;if(n==null){this.callback(this);this.isDrillingDown=!1;return}t=this;try{r=Highcharts.geojson(JSON.parse(n));t.presentGeoLocations=[];i={};$.each(r,function(){this.properties.mbCode=this.properties["hc-key"].replace(/-/g,".").toUpperCase();t.presentGeoLocations.push(this.properties.mbCode);i[this.properties.mbCode]=this;this.value=0});u=t.getMapData()[0];$.each(u,function(){if(i[this.code]==null);i[this.code].value=this.value;i[this.code].min=this.min;i[this.code].max=this.max});t.chart.hideLoading();t.chart.addSeriesAsDrilldown(t.point,{name:t.point.name,data:r,dataLabels:{enabled:!0,format:"{point.name}"}})}catch(f){}finally{t.isDrillingDown=!1}};HighChartFactory.prototype.getMap=function(n,t,i){var u=this.isOpen?"jsonp":"json",f=this.isOpen?"https://":"https://",e=this.isOpen?"/MetaBaseOpenServices/RestServices.svc":"/MetaBaseServices/RestServicesProtected.svc",o="?id="+n+'&code="'+t+'"',s=f+this.hostName+e+"/maps/"+o,r=this;$.ajax({url:s,cache:!1,dataType:u,xhrFields:{withCredentials:!r.isOpen},error:function(n,t,u){r.errorCode=n.status;r.error=u;i(null)},success:function(n){n.getMapResult.GeoMapping!=null&&(r.meta.GeoMapping=n.getMapResult.GeoMapping);i(n.getMapResult.Map)}})};HighChartFactory.prototype.getMapToolTip=function(){return{formatter:function(){var n=this.point.properties.name+"<br/>";return n+="value: "+this.point.value+"<br/>",this.point.min!=null&&this.point.max!=null&&(n+="range: "+this.point.min+"-"+this.point.max+"<br/>"),n}}};HighChartFactory.prototype.updateMapData=function(){this.setMapUnit();var n=this.getMapData()[0];this.chart.series[0].setData(n)};HighChartFactory.prototype.numberToWords=function(n){var t=this.languageID==0?this.dutchnumbers:this.englishnumbers;return n<3?t[n%3]:(t[n%3]+" "+t[2+Math.floor(n/3)]).trim()};HighChartFactory.prototype.setMapUnit=function(){var n=_.findWhere(this.meta.MeasureClassification.Elements,{ExternalID:this.seriesDimension.currentElements[0]});unit=this.numberToWords(n.Power);n.UnitSymbol!=null&&(unit=unit+" "+n.UnitSymbol);this.mapTooltipFormatter=function(n){var t='<span style="font-weight: '+this.theme.titleFontWeight+'">'+n.name+"<br/>";return t=t+'<span style="font-size: '+this.theme.tooltipFontSize+'">'+n.series.name+": "+Highcharts.numberFormat(n.value)+" "+unit+"<\/span><br/>",this.chartOptions.func!="_drawMap"&&(t=t+'<span style="font-size: '+this.theme.tooltipFontSize+'">(Click for details)<\/span>'),t}};