"use strict";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _createClass(e,t,n){return t&&_defineProperties(e.prototype,t),n&&_defineProperties(e,n),e}var App=function(){function r(e){var t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{};_classCallCheck(this,r),this.options=t,this.options.distortion=LongRaceDistortion,this.container=e,this.renderer=new THREE.WebGLRenderer({antialias:!1}),this.renderer.setSize(e.offsetWidth,e.offsetHeight,!1),this.renderer.setPixelRatio(1),this.renderer.setClearColor(t.colors.sceneBackground),this.composer=new POSTPROCESSING.EffectComposer(this.renderer),e.appendChild(this.renderer.domElement),this.camera=new THREE.PerspectiveCamera(t.fov,e.offsetWidth/e.offsetHeight,.1,1e4),this.camera.position.z=-5,this.camera.position.y=8,this.camera.position.x=0,this.scene=new THREE.Scene;var n=new THREE.Fog(t.colors.background,.2*t.length,500*t.length);this.scene.fog=n,this.fogUniforms={fogColor:{type:"c",value:n.color},fogNear:{type:"f",value:n.near},fogFar:{type:"f",value:n.far}},this.clock=new THREE.Clock,this.assets={},this.disposed=!1,this.road=new Road(this,t),this.leftCarLights=new CarLights(this,t,t.colors.leftCars,t.movingAwaySpeed,new THREE.Vector2(0,1-t.carLightsFade)),this.rightCarLights=new CarLights(this,t,t.colors.rightCars,t.movingCloserSpeed,new THREE.Vector2(1,0+t.carLightsFade)),this.fovTarget=t.fov,this.speedUpTarget=0,this.speedUp=0,this.timeOffset=0,this.tick=this.tick.bind(this),this.init=this.init.bind(this),this.setSize=this.setSize.bind(this)}return _createClass(r,[{key:"initPasses",value:function(){this.renderPass=new POSTPROCESSING.RenderPass(this.scene,this.camera),this.bloomPass=new POSTPROCESSING.EffectPass(this.camera,new POSTPROCESSING.BloomEffect({luminanceThreshold:.2,luminanceSmoothing:0,resolutionScale:1}));var e=new POSTPROCESSING.EffectPass(this.camera,new POSTPROCESSING.SMAAEffect(this.assets.smaa.search,this.assets.smaa.area,POSTPROCESSING.SMAAPreset.MEDIUM));this.renderPass.renderToScreen=!1,this.bloomPass.renderToScreen=!1,e.renderToScreen=!0,this.composer.addPass(this.renderPass),this.composer.addPass(this.bloomPass),this.composer.addPass(e)}},{key:"loadAssets",value:function(){var i=this.assets;return new Promise(function(e,t){var n=new THREE.LoadingManager(e),r=new Image,a=new Image;i.smaa={},r.addEventListener("load",function(){i.smaa.search=this,n.itemEnd("smaa-search")}),a.addEventListener("load",function(){i.smaa.area=this,n.itemEnd("smaa-area")}),n.itemStart("smaa-search"),n.itemStart("smaa-area"),r.src=POSTPROCESSING.SMAAEffect.searchImageDataURL,a.src=POSTPROCESSING.SMAAEffect.areaImageDataURL})}},{key:"init",value:function(){this.initPasses();var e=this.options;this.road.init(),this.leftCarLights.init(),this.leftCarLights.mesh.position.setX(-e.roadWidth/2-e.islandWidth/2),this.rightCarLights.init(),this.rightCarLights.mesh.position.setX(e.roadWidth/2+e.islandWidth/2),this.tick()}},{key:"update",value:function(e){var t=Math.exp(60*Math.log2(.9)*e);this.speedUp+=lerp(this.speedUp,this.speedUpTarget,t,1e-5),this.timeOffset+=this.speedUp*e;var n=this.clock.elapsedTime+this.timeOffset;this.rightCarLights.update(n),this.leftCarLights.update(n),this.road.update(n);var r,a=!1,i=lerp(this.camera.fov,this.fovTarget,t);0!==i&&(this.camera.fov+=i*e*6,a=!0),this.options.distortion.getJS&&(r=this.options.distortion.getJS(.025,n),this.camera.lookAt(new THREE.Vector3(this.camera.position.x+r.x,this.camera.position.y+r.y,this.camera.position.z+r.z)),a=!0),a&&this.camera.updateProjectionMatrix()}},{key:"render",value:function(e){this.composer.render(e)}},{key:"dispose",value:function(){this.disposed=!0}},{key:"setSize",value:function(e,t,n){this.composer.setSize(e,t,n)}},{key:"tick",value:function(){var e;!this.disposed&&this&&(e=this.clock.getDelta(),this.render(e),this.update(e),requestAnimationFrame(this.tick))}}]),r}(),LongRaceUniforms={uFreq:new THREE.Uniform(new THREE.Vector2(2,3)),uAmp:new THREE.Uniform(new THREE.Vector2(35,10))},LongRaceDistortion={uniforms:LongRaceUniforms,getDistortion:"\n\n    uniform vec2 uFreq;\n    uniform vec2 uAmp;\n\t\t\t\t#define PI 3.14159265358979\n\t\t\t\t\n\t\t\t\tvec3 getDistortion(float progress){\n\n\t\t\t\t\t\tfloat camProgress = 0.0125;\n\t\t\t\t\t\treturn vec3( \n\t\t\t\t\t\t\tsin(progress * PI * uFreq.x +uTime) * uAmp.x - sin(camProgress * PI * uFreq.x+uTime ) * uAmp.x,\n\t\t\t\t\t\t\tsin(progress * PI * uFreq.y +uTime) * uAmp.y - sin(camProgress * PI * uFreq.y+uTime ) * uAmp.y,\n\t\t\t\t\t\t\t0.\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n        ",getJS:function(e,t){var n=LongRaceUniforms.uFreq.value,r=LongRaceUniforms.uAmp.value,a=new THREE.Vector3(Math.sin(e*Math.PI*n.x+t)*r.x-Math.sin(.0125*Math.PI*n.x+t)*r.x,Math.sin(e*Math.PI*n.y+t)*r.y-Math.sin(.0125*Math.PI*n.y+t)*r.y,0),i=new THREE.Vector3(1,1,0),s=new THREE.Vector3(0,0,-5);return a.multiply(i).add(s)}},random=function(e){return Array.isArray(e)?Math.random()*(e[1]-e[0])+e[0]:Math.random()*e},pickRandom=function(e){return Array.isArray(e)?e[Math.floor(Math.random()*e.length)]:e};function lerp(e,t){var n=3<arguments.length&&void 0!==arguments[3]?arguments[3]:.001,r=(t-e)*(2<arguments.length&&void 0!==arguments[2]?arguments[2]:.1);return Math.abs(r)<n&&(r=t-e),r}var CarLights=function(){function i(e,t,n,r,a){_classCallCheck(this,i),this.webgl=e,this.options=t,this.colors=n,this.speed=r,this.fade=a}return _createClass(i,[{key:"init",value:function(){var t=this.options,e=new THREE.LineCurve3(new THREE.Vector3(0,0,0),new THREE.Vector3(0,0,-1)),n=new THREE.TubeBufferGeometry(e,40,1,8,!1),r=(new THREE.InstancedBufferGeometry).copy(n);r.instanceCount=2*t.lightPairsPerRoadWay;for(var a=t.roadWidth/t.lanesPerRoad,i=[],s=[],o=[],h=this.colors,h=Array.isArray(h)?h.map(function(e){return new THREE.Color(e)}):new THREE.Color(h),d=0;d<t.lightPairsPerRoadWay;d++){var c=random(t.carLightsRadius),l=random(t.carLightsLength),u=random(this.speed),f=d%3*a-t.roadWidth/2+a/2,m=random(t.carWidthPercentage)*a;f+=random(t.carShiftX)*a;var g=random(t.carFloorSeparation)+1.3*c,v=-random(t.length);i.push(f-m/2),i.push(g),i.push(v),i.push(f+m/2),i.push(g),i.push(v),s.push(c),s.push(l),s.push(u),s.push(c),s.push(l),s.push(u);var p=pickRandom(h);o.push(p.r),o.push(p.g),o.push(p.b),o.push(p.r),o.push(p.g),o.push(p.b)}r.setAttribute("aOffset",new THREE.InstancedBufferAttribute(new Float32Array(i),3,!1)),r.setAttribute("aMetrics",new THREE.InstancedBufferAttribute(new Float32Array(s),3,!1)),r.setAttribute("aColor",new THREE.InstancedBufferAttribute(new Float32Array(o),3,!1));var E=new THREE.ShaderMaterial({fragmentShader:carLightsFragment,vertexShader:carLightsVertex,transparent:!0,uniforms:Object.assign({uTime:new THREE.Uniform(0),uTravelLength:new THREE.Uniform(t.length),uFade:new THREE.Uniform(this.fade)},this.webgl.fogUniforms,t.distortion.uniforms)});E.onBeforeCompile=function(e){e.vertexShader=e.vertexShader.replace("#include <getDistortion_vertex>",t.distortion.getDistortion)};var T=new THREE.Mesh(r,E);T.frustumCulled=!1,this.webgl.scene.add(T),this.mesh=T}},{key:"update",value:function(e){this.mesh.material.uniforms.uTime.value=e}}]),i}(),carLightsFragment="\n\n  #define USE_FOG;\n  ".concat(THREE.ShaderChunk.fog_pars_fragment,"\n  varying vec3 vColor;\n  varying vec2 vUv; \n  uniform vec2 uFade;\n  void main() {\n  vec3 color = vec3(vColor);\n  float fadeStart = 0.4;\n  float maxFade = 0.;\n  float alpha = 1.;\n  \n  alpha = smoothstep(uFade.x, uFade.y, vUv.x);\n  gl_FragColor = vec4(color,alpha);\n  if (gl_FragColor.a < 0.0001) discard;\n  ").concat(THREE.ShaderChunk.fog_fragment,"\n  }\n"),carLightsVertex="\n  #define USE_FOG;\n  ".concat(THREE.ShaderChunk.fog_pars_vertex,"\n  attribute vec3 aOffset;\n  attribute vec3 aMetrics;\n  attribute vec3 aColor;\n\n  \n\n  uniform float uTravelLength;\n  uniform float uTime;\n  uniform float uSpeed;\n\n  varying vec2 vUv; \n  varying vec3 vColor; \n  #include <getDistortion_vertex>\n\n  void main() {\n    vec3 transformed = position.xyz;\n    float radius = aMetrics.r;\n    float myLength = aMetrics.g;\n    float speed = aMetrics.b;\n\n    transformed.xy *= radius ;\n    transformed.z *= myLength;\n  \n    // Add my length to make sure it loops after the lights hits the end\n    transformed.z += myLength-mod( uTime *speed + aOffset.z, uTravelLength);\n    transformed.xy += aOffset.xy;\n\n\n    float progress = abs(transformed.z / uTravelLength);\n    transformed.xyz += getDistortion(progress);\n\n    vec4 mvPosition = modelViewMatrix * vec4(transformed,1.);\n    gl_Position = projectionMatrix * mvPosition;\n    vUv = uv;\n    vColor = aColor;\n    ").concat(THREE.ShaderChunk.fog_vertex,"\n  }"),Road=function(){function n(e,t){_classCallCheck(this,n),this.webgl=e,this.options=t,this.uTime=new THREE.Uniform(0)}return _createClass(n,[{key:"createIsland",value:function(){this.options}},{key:"createPlane",value:function(e,t,n){var r=this.options,a=new THREE.PlaneBufferGeometry(n?r.roadWidth:r.islandWidth,r.length,20,100),i={uTravelLength:new THREE.Uniform(r.length),uColor:new THREE.Uniform(new THREE.Color(n?r.colors.roadColor:r.colors.islandColor)),uTime:this.uTime};n&&(i=Object.assign(i,{uLanes:new THREE.Uniform(r.lanesPerRoad)}));var s=new THREE.ShaderMaterial({fragmentShader:n?roadFragment:islandFragment,vertexShader:roadVertex,side:THREE.DoubleSide,uniforms:Object.assign(i,this.webgl.fogUniforms,r.distortion.uniforms)});s.onBeforeCompile=function(e){e.vertexShader=e.vertexShader.replace("#include <getDistortion_vertex>",r.distortion.getDistortion)};var o=new THREE.Mesh(a,s);return o.rotation.x=-Math.PI/2,o.position.z=-r.length/2,o.position.x+=(this.options.islandWidth/2+r.roadWidth/2)*e,this.webgl.scene.add(o),o}},{key:"init",value:function(){this.leftRoadWay=this.createPlane(-1,this.options.roadWidth,!0),this.rightRoadWay=this.createPlane(1,this.options.roadWidth,!0),this.island=this.createPlane(0,this.options.islandWidth,!1)}},{key:"update",value:function(e){this.uTime.value=e}}]),n}(),roadBaseFragment="\n    #define USE_FOG;\n    varying vec2 vUv; \n    uniform vec3 uColor;\n    uniform float uTime;\n    #include <roadMarkings_vars>\n    ".concat(THREE.ShaderChunk.fog_pars_fragment,"\n    void main() {\n        vec2 uv = vUv;\n        vec3 color = vec3(uColor);\n        \n        #include <roadMarkings_fragment>\n\n        gl_FragColor = vec4(color,1.);\n        ").concat(THREE.ShaderChunk.fog_fragment,"\n    }\n"),islandFragment=roadBaseFragment.replace("#include <roadMarkings_fragment>","").replace("#include <roadMarkings_vars>",""),roadMarkings_vars="\n    uniform float uLanes;\n    highp float random(vec2 co)\n    {\n        highp float a = 12.9898;\n        highp float b = 78.233;\n        highp float c = 43758.5453;\n        highp float dt= dot(co.xy ,vec2(a,b));\n        highp float sn= mod(dt,3.14);\n        return fract(sin(sn) * c);\n    }\n",roadMarkings_fragment="\n  uv.y = mod(uv.y + uTime * 0.1,1.);\n\n  vec2 noiseFreq = vec2(4., 7000.);\n  float roadNoise = random( floor(uv * noiseFreq)/noiseFreq ) * 0.02 - 0.01; \n  color += roadNoise;\n",roadFragment=roadBaseFragment.replace("#include <roadMarkings_fragment>",roadMarkings_fragment).replace("#include <roadMarkings_vars>",roadMarkings_vars),roadVertex="\n#define USE_FOG;\nuniform float uTime;\n".concat(THREE.ShaderChunk.fog_pars_vertex,"\n\nuniform float uTravelLength;\n\nvarying vec2 vUv; \n  #include <getDistortion_vertex>\nvoid main() {\n  vec3 transformed = position.xyz;\n\n    vec3 distortion  = getDistortion((transformed.y + uTravelLength / 2.) / uTravelLength);\n    transformed.x += distortion.x;\n    transformed.z += distortion.y;\n  transformed.y += -1.*distortion.z;  \n  \n  vec4 mvPosition = modelViewMatrix * vec4(transformed,1.);\n  gl_Position = projectionMatrix * mvPosition;\n  vUv = uv;\n\n  ").concat(THREE.ShaderChunk.fog_vertex,"\n}");