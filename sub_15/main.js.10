/*!
 * JavaScript Cookie v2.2.0
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
; (function (factory) {
	var registeredInModuleLoader;
	if (typeof define === 'function' && define.amd) {
		define(factory);
		registeredInModuleLoader = true;
	}
	if (typeof exports === 'object') {
		module.exports = factory();
		registeredInModuleLoader = true;
	}
	if (!registeredInModuleLoader) {
		var OldCookies = window.Cookies;
		var api = window.Cookies = factory();
		api.noConflict = function () {
			window.Cookies = OldCookies;
			return api;
		};
	}
}(function () {
	function extend() {
		var i = 0;
		var result = {};
		for (; i < arguments.length; i++) {
			var attributes = arguments[i];
			for (var key in attributes) {
				result[key] = attributes[key];
			}
		}
		return result;
	}

	function init(converter) {
		function api(key, value, attributes) {
			if (typeof document === 'undefined') {
				return;
			}

			// Write

			if (arguments.length > 1) {
				attributes = extend({
					path: '/'
				}, api.defaults, attributes);

				if (typeof attributes.expires === 'number') {
					attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);
				}

				// We're using "expires" because "max-age" is not supported by IE
				attributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';

				try {
					var result = JSON.stringify(value);
					if (/^[\{\[]/.test(result)) {
						value = result;
					}
				} catch (e) { }

				value = converter.write ?
					converter.write(value, key) :
					encodeURIComponent(String(value))
						.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);

				key = encodeURIComponent(String(key))
					.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)
					.replace(/[\(\)]/g, escape);

				var stringifiedAttributes = '';
				for (var attributeName in attributes) {
					if (!attributes[attributeName]) {
						continue;
					}
					stringifiedAttributes += '; ' + attributeName;
					if (attributes[attributeName] === true) {
						continue;
					}

					// Considers RFC 6265 section 5.2:
					// ...
					// 3.  If the remaining unparsed-attributes contains a %x3B (";")
					//     character:
					// Consume the characters of the unparsed-attributes up to,
					// not including, the first %x3B (";") character.
					// ...
					stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];
				}

				return (document.cookie = key + '=' + value + stringifiedAttributes);
			}

			// Read

			var jar = {};
			var decode = function (s) {
				return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
			};
			// To prevent the for loop in the first place assign an empty array
			// in case there are no cookies at all.
			var cookies = document.cookie ? document.cookie.split('; ') : [];
			var i = 0;

			for (; i < cookies.length; i++) {
				var parts = cookies[i].split('=');
				var cookie = parts.slice(1).join('=');

				if (!this.json && cookie.charAt(0) === '"') {
					cookie = cookie.slice(1, -1);
				}

				try {
					var name = decode(parts[0]);
					cookie = (converter.read || converter)(cookie, name) ||
						decode(cookie);

					if (this.json) {
						try {
							cookie = JSON.parse(cookie);
						} catch (e) { }
					}

					jar[name] = cookie;

					if (key === name) {
						break;
					}
				} catch (e) { }
			}

			return key ? jar[key] : jar;
		}

		api.set = api;
		api.get = function (key) {
			return api.call(api, key);
		};
		api.getJSON = function (key) {
			return api.call({
				json: true
			}, key);
		};
		api.remove = function (key, attributes) {
			api(key, '', extend(attributes, {
				expires: -1
			}));
		};

		api.defaults = {};

		api.withConverter = init;

		return api;
	}

	return init(function () { });
}));


(function ($) {

	function validateEmail(email) {
		var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
		return re.test(email);
	}


	// function getBottomY( el ){
	// 	var $el = $(el);
	// 	var position = $el.offset();
	// 	var height = $el.height();
	// 	var bottomY = position + height;
	// 	return bottomY;
	// }

	function equalHeight(selector, context, fromWidth) {

		if (typeof fromWidth == 'undefined') fromWidth = 1023;

		var highest = 0;

		$(selector, context).each(function () {
			var h = $(this).innerHeight();
			if (h > highest) highest = h;
		});

		// niet weergeven bij mobiel
		if ($(window).width() < fromWidth) {
			var newheight = 'auto';
		} else {
			var newheight = highest
		}

		$(selector, context).innerHeight(newheight)

	}

	$(window).load(function () {
		$('#home__recent .leftcol .block').each(
			$(this).removeAttr('style')
		)
		equalHeight('.block', '#home__recent .leftcol');

	});


	$(window).resize(function () {
		equalHeight('.block', '#home__recent .leftcol');
	});


	$(document).ready(function () {

		// var userFeed = new Instafeed({
		// 	get: 'user',
		// 	userId: '1747181451',
		// 	accessToken: '1747181451.1677ed0.15b64f20993a46b69917e9d7fcecd4c2',
		// 	resolution: 'standard_resolution',
		// 	limit: 5,
		// 	template: '<div class="insta_g"><img alt="Instagram afbeelding" src="{{image}}" /></div>',
		// 	after: function () {
		// 		console.log('data');
		// 	},
		// 	success: function (data) {
		// 		instafeed
		// 	}
		// });
		// if ($('#instafeed').length) {
		// 	userFeed.run();
		// }

		$('.toggle_menu').on('click', function (e) {
			e.preventDefault();
			$('.container', '#main-nav').toggleClass('opened');
		});

		equalHeight('.block', '#home__recent .leftcol');

		// mobile subnav
		$('select', '#main-subnav-mobile').change(function () {
			window.location.href = $(this).val();
		});


		if (typeof $(".container").fitVids != 'undefined') {
			$(".container").fitVids();
		}

		$(".social-popup").on('click', function (e) {

			var btn = e.delegateTarget;

			if ($(btn).hasClass('email')) {
				return true;
			}

			e.preventDefault();

			if ($(btn).hasClass('print')) {
				window.print();
				return false;
			}

			window.open($(btn).attr("href"), "popupWindow", "width=500,height=400,scrollbars=yes");

		});

		$('.cycle-overlay').on('click', function (e) {
			e.preventDefault();
			var opts = $('.cycle-slideshow').data("cycle.opts");
			window.location.href = $('.cycle-slide-active').data('cycle-link');

			// console.log( $('.cycle-slide-active').data('cycle-link') );
			// console.log( opts );


		});

		$('.pauzeplay').on('click', function (e) {
			e.preventDefault();

			var opts = $('.cycle-slideshow').data("cycle.opts");

			if (opts.paused) {
				$('.cycle-slideshow').cycle('resume');
				$('.pauzeplay').html('| |');

			} else {
				$('.cycle-slideshow').cycle('pause');
				$('.pauzeplay').html('&#9658;');
			}

		});

		$('.discussion-item').on('click', function (e) {
			e.preventDefault();
			window.location.href = $(this).data('url');
		});

	});

})(jQuery);

$(window).on('load', function () {
	$('iframe[data-cookieconsent]').each(function () {
		console.log(Cookiebot.consent);
		if (!Cookiebot.consent.marketing) {
			var ytID = $(this).attr('data-yt-id');
			$(this).before("<a href='javascript:void(0);' class='video-placeholder'><img alt='' src='https://img.youtube.com/vi/" + ytID + "/hqdefault.jpg' /><span class='label'>Accepteer de marketing cookies om deze video te bekijken</span></div>");
		}
	})

	$('.video-placeholder').on('click', function () {
		$(this).remove();
		Cookiebot.submitCustomConsent(Cookiebot.consent.preferences, Cookiebot.consent.statistics, true);
	})
});
