// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.24/esri/copyright.txt for details.//>>built
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/maybe","./cpuMapped/FreeList"],function(l,f,g,h,p){const m=g("esri-2d-log-allocations");g=function(){function b(a){this._array=a}b.create=function(a){a=e.acquire(a);return new b(a)};var c=b.prototype;c.expand=function(a){a=e.acquire(a);a.set(this._array);e.release(this._array);this._array=a};c.destroy=function(){e.release(this._array)};c.set=function(a,d){this._array.set(a._array,d)};c.slice=
function(){const a=e.acquire(this._array.byteLength);a.set(this._array);return new b(a)};f._createClass(b,[{key:"array",get:function(){return this._array}},{key:"length",get:function(){return this._array.length}}]);return b}();let k=function(){function b(){this._data=new ArrayBuffer(b.BYTE_LENGTH);this._freeList=new p.FreeList({start:0,end:this._data.byteLength})}var c=b.prototype;c.allocate=function(a){const d=this._freeList.firstFit(a);return h.isNone(d)?null:new Uint32Array(this._data,d,a/Uint32Array.BYTES_PER_ELEMENT)};
c.free=function(a){this._freeList.free(a.byteOffset,a.byteLength)};f._createClass(b,[{key:"buffer",get:function(){return this._data}}],[{key:"BYTE_LENGTH",get:function(){return 64E6}}]);return b}();const e=new (function(){function b(){this._bytesAllocated=0;this._pages=[];this._pagesByBuffer=new Map;this._addPage()}var c=b.prototype;c.acquire=function(a){this._bytesAllocated+=a;m&&console.log(`Allocating ${a}, (${this._bytesAllocated} / ${this._bytesTotal})`);if(a>k.BYTE_LENGTH)return new Uint32Array(a/
Uint32Array.BYTES_PER_ELEMENT);for(const d of this._pages){const n=d.allocate(a);if(h.isSome(n))return n}return h.unwrapOrThrow(this._addPage().allocate(a),"Expected to allocate page")};c.release=function(a){this._bytesAllocated-=a.byteLength;m&&console.log(`Freeing ${a.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const d=this._pagesByBuffer.get(a.buffer);d&&d.free(a)};c._addPage=function(){const a=new k;this._pages.push(a);this._pagesByBuffer.set(a.buffer,a);return a};f._createClass(b,
[{key:"_bytesTotal",get:function(){return this._pages.length*k.BYTE_LENGTH}}]);return b}());l.TypedBuffer=g;Object.defineProperties(l,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});